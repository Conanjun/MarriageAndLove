using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Data;
using System.Data.SqlClient;


/// <summary>
/// sql_user_login_register 的摘要说明
/// </summary>
public class sql_user
{
	//引入DataBase类
	private readonly DataBase data = new DataBase();
	//用户基本信息
	string username = "";
	string password = "";
	string email = "";
	string phone = "";
	int status = 0;//默认未激活
	int grank = 0;//标明用户等级，0为未认证用户，1为认证的普通用户，2为认证的vip用户
	//int sex = 0;//标明用户性别，0为保密，1为男，2为女

	public string UserName
	{
		get { return username; }
		set { username = value; }
	}
	public string PassWord
	{
		get { return password; }
		set { password = value; }
	}
	public string Email
	{
		get { return email; }
		set { email = value; }
	}
	public string Phone
	{
		get { return phone; }
		set { phone = value; }
	}
	public int Status
	{
		get { return status; }
		set { status = value; }
	}
	public int Grank
	{
		get { return grank; }
		set { grank = value; }
	}
	/*public int Sex
	{
		get { return sex; }
		set { sex = value; }
	}*/
	
	//会员登录
	//账号登陆
	public DataSet LoginByAccount(sql_user user)
	{
		SqlParameter[] parms ={
								 data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.username),
								 data.MakeInParam("@PassWord",SqlDbType.VarChar,50,user.password),
								// data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.email),
								 //data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.phone),
								 //data.MakeInParam("@UserName",SqlDbType.Int,50,user.status),
								 //data.MakeInParam("@UserName",SqlDbType.Int,50,user.grank),
								// data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.sex),
							 };
		//返回结果集的方式，使用data.Tables[0].Rows.Count取得行数判断是否登录成功
		return data.RunProcReturn("select * from users where username=@Username and password=@PassWord",parms,"users");
	}

    public DataSet LoginByEmail(sql_user user)
    {
        SqlParameter[] parms ={
								 //data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.username),
								 data.MakeInParam("@Email",SqlDbType.VarChar,50,user.email),
                                 data.MakeInParam("@PassWord",SqlDbType.VarChar,50,user.password),
								 //data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.phone),
								 //data.MakeInParam("@UserName",SqlDbType.Int,50,user.status),
								 //data.MakeInParam("@UserName",SqlDbType.Int,50,user.grank),
								// data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.sex),
							 };
        //返回结果集的方式，使用data.Tables[0].Rows.Count取得行数判断是否登录成功
        return data.RunProcReturn("select * from users where email=@Email and password=@PassWord", parms, "users");
    }

    public DataSet LoginByPhone(sql_user user)
    {
        SqlParameter[] parms ={
								 //data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.username),
								 //data.MakeInParam("@Email",SqlDbType.VarChar,50,user.email),
                                 data.MakeInParam("@PassWord",SqlDbType.VarChar,50,user.password),
								 data.MakeInParam("@Phone",SqlDbType.VarChar,50,user.phone),
								 //data.MakeInParam("@UserName",SqlDbType.Int,50,user.status),
								 //data.MakeInParam("@UserName",SqlDbType.Int,50,user.grank),
								// data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.sex),
							 };
        //返回结果集的方式，使用data.Tables[0].Rows.Count取得行数判断是否登录成功
        return data.RunProcReturn("select * from users where phone=@Phone and password=@PassWord", parms, "users");
    }

    //用户邮箱注册
    public int RegisterByEmail(sql_user user)
    {
        /*
        string db_email = email.Text;
        string db_username = username.Text;
        string db_password = password.Text;
         */

        SqlParameter[] parms ={
								 data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.username),
								 data.MakeInParam("@PassWord",SqlDbType.VarChar,50,user.password),
								 data.MakeInParam("@Email",SqlDbType.VarChar,50,user.email),
								 data.MakeInParam("@UserPhone",SqlDbType.VarChar,50,user.phone),
								 //data.MakeInParam("@UserName",SqlDbType.Int,50,user.status),
								 //data.MakeInParam("@UserName",SqlDbType.Int,50,user.grank),
								// data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.sex),
							 };
        //返回结果集的方式，使用data.Tables[0].Rows.Count取得行数判断是否登录成功
        return data.RunProc("insert into users(username,password,email,phone) values(@UserName,@PassWord,@Email,0) ", parms);
    }

    //用户邮箱注册
    public int RegisterByPhone(sql_user user)
    {
        /*
        string db_phone = phone.Text;
        string db_username = username.Text;
        string db_password = password.Text;
         */

        SqlParameter[] parms ={
								 data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.username),
								 data.MakeInParam("@PassWord",SqlDbType.VarChar,50,user.password),
								 data.MakeInParam("@Email",SqlDbType.VarChar,50,user.email),
								 data.MakeInParam("@Phone",SqlDbType.VarChar,50,user.phone),
								 //data.MakeInParam("@UserName",SqlDbType.Int,50,user.status),
								 //data.MakeInParam("@UserName",SqlDbType.Int,50,user.grank),
								// data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.sex),
							 };
        //返回结果集的方式，使用data.Tables[0].Rows.Count取得行数判断是否登录成功
        return data.RunProc("insert into users(username,password,email,phone) values(@UserName,@PassWord,0,@Phone) ", parms);
    }
    
    //用于判断用户名是否存在
    public DataSet IsUserExist(sql_user user)
    {
        SqlParameter[] parms ={
								 data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.username),
								 //data.MakeInParam("@PassWord",SqlDbType.VarChar,50,user.password),
								// data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.email),
								 //data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.phone),
								 //data.MakeInParam("@UserName",SqlDbType.Int,50,user.status),
								 //data.MakeInParam("@UserName",SqlDbType.Int,50,user.grank),
								// data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.sex),
							 };
        return data.RunProcReturn("select * from users where username=@Username", parms, "users");
    }
    
    public bool IsStatusValid(sql_user user)
	{
		SqlParameter[] parms ={
								  data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.username),
								 // data.MakeInParam("@Status",SqlDbType.Int,50,user.status),
							  };
		if (data.RunProcReturn("select * from users where username=@Username", parms, "users").Tables[0].Rows[0]["status"].ToString() == "1")
		{
			return true;
		}
		else
		{
			return false;
		}
	}

	//更新用户激活状态
	public int UpdateUserStatus(sql_user user)
	{
		SqlParameter[] parms ={
								  data.MakeInParam("@UserName",SqlDbType.VarChar,50,user.username),
								  data.MakeInParam("@Status",SqlDbType.TinyInt,1,user.status);
							  };
		return data.RunProc("update users set status=1 where username=@username",parms);
	}

	public sql_user()
	{
		//
		// TODO: 在此处添加构造函数逻辑
		//
	}
}